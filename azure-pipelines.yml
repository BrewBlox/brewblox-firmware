resources:
  repositories:
    - repository: self
  containers: 
    - container: compiler
      image: brewblox/firmware-compiler:arm-gcc-8
      
trigger:
  tags:
    include:
      - '*'
  branches:
    include:
      - '*'
pr:
  branches:
    include:
      - '*'

#########################################################
# Tests
#########################################################
jobs:
  - job: Tests
    pool:
      vmImage: "Ubuntu-18.04"
    container: compiler

    steps:
      - checkout: self
        fetchDepth: 1
        submodules: recursive
      - bash: pwd
      - bash: compile-proto.sh
        displayName: Compile proto

      - bash: build-tests.sh
        displayName: Build tests

      - bash: run-tests.sh
        displayName: Run tests

  #########################################################
  # Simulator
  #########################################################
  - job: Simulator
    pool:
      vmImage: "Ubuntu-18.04"

    steps:
      - bash: |
          git submodule update --init --recursive --jobs 4
        displayName: Init submodules

      - bash: |
          bash start-compiler.sh
        workingDirectory: docker
        displayName: Start compiler

      - bash: |
          bash build-simulator.sh
        workingDirectory: docker
        displayName: Build

      - bash: |
          docker save brewblox/firmware-simulator:local > $(Build.ArtifactStagingDirectory)/simulator.tar
        workingDirectory: docker
        displayName: Save image

      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: "$(Build.ArtifactStagingDirectory)"
          artifactName: simulator

  #########################################################
  # Binaries
  #########################################################
  - job: Binaries
    pool:
      vmImage: "Ubuntu-18.04"

    steps:
      - bash: |
          git submodule update --init --recursive --jobs 4
        displayName: Init submodules

      - bash: |
          bash start-compiler.sh
        workingDirectory: docker
        displayName: Start compiler

      - bash: |
          bash build-bin.sh
        workingDirectory: docker
        displayName: Build

      - bash: |
          docker save brewblox/firmware-bin:local > $(Build.ArtifactStagingDirectory)/bin.tar
        workingDirectory: docker
        displayName: Save image

      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: "$(Build.ArtifactStagingDirectory)"
          artifactName: bin

  #########################################################
  # Deployment
  #########################################################
  - job: Deploy
    pool:
      vmImage: "Ubuntu-18.04"
    dependsOn:
      - Tests
      - Simulator
      - Binaries

    variables:
      # Variables imported from brewblox group:
      # DOCKER_USER
      # DOCKER_PASSWORD
      # PYPI_USER
      # PYPI_PASSWORD
      - group: brewblox

    steps:
      - bash: |
          BRANCH=$(echo $(Build.SourceBranch) | grep -oP "^refs/heads/\K.*")
          TAG=$(git describe --tags | grep "^[[:digit:]]*\.[[:digit:]]*\.[[:digit:]]$")
          echo "##vso[task.setvariable variable=brewblox.branch]$BRANCH"
          echo "##vso[task.setvariable variable=brewblox.tag]$TAG"
        displayName: export build variables

      - bash: |
          echo $(DOCKER_PASSWORD) | docker login -u $(DOCKER_USER) --password-stdin docker.io
        displayName: Docker login
        condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))

      - task: DownloadBuildArtifacts@0
        inputs:
          buildType: current
          downloadType: single
          artifactName: simulator
          downloadPath: $(System.ArtifactsDirectory)

      - task: DownloadBuildArtifacts@0
        inputs:
          buildType: current
          downloadType: single
          artifactName: bin
          downloadPath: $(System.ArtifactsDirectory)

      - bash: |
          docker load -i $(System.ArtifactsDirectory)/simulator/simulator.tar
          docker load -i $(System.ArtifactsDirectory)/bin/bin.tar
        displayName: Import images

      - bash: |
          bash push-local.sh ${SIM_REPO} newest-tag
          bash push-local.sh ${SIM_REPO} $(brewblox.tag)
          bash push-local.sh ${BIN_REPO} newest-tag
          bash push-local.sh ${BIN_REPO} $(brewblox.tag)
        displayName: Deploy newest-tag and version tag to Docker Hub on tagged commits
        condition: and(succeeded(), variables['brewblox.tag'])
        workingDirectory: docker
        env:
          SIM_REPO: brewblox/firmware-simulator
          BIN_REPO: brewblox/firmware-bin

      - bash: |
          CLEAN_BRANCH=$(echo $(brewblox.branch) | tr '/' '-' | tr '[:upper:]' '[:lower:]')
          bash push-local.sh ${SIM_REPO} ${CLEAN_BRANCH}
          bash push-local.sh ${BIN_REPO} ${CLEAN_BRANCH}
        displayName: Deploy branch to Docker Hub on any push to the GitHub repository
        condition: and(succeeded(), variables['brewblox.branch'], not(variables['brewblox.tag']))
        workingDirectory: docker
        env:
          SIM_REPO: brewblox/firmware-simulator
          BIN_REPO: brewblox/firmware-bin
