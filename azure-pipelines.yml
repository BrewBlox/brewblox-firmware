pool:
  vmImage: 'Ubuntu-16.04'

variables:
  # Variables imported from brewblox group:
  # DOCKER_USER
  # DOCKER_PASSWORD
  # PYPI_USER
  # PYPI_PASSWORD
  - group: brewblox

steps:
- bash: |
    BRANCH=$(echo $(Build.SourceBranch) | grep -oP "^refs/heads/\K.*")
    TAG=$(git describe --tags | grep "^[[:digit:]]*\.[[:digit:]]*\.[[:digit:]]$")
    echo "##vso[task.setvariable variable=brewblox.branch]$BRANCH"
    echo "##vso[task.setvariable variable=brewblox.tag]$TAG"
  displayName: export build variables

- bash: |
    bash start-compiler.sh
    docker-compose exec compiler bash run-ci.sh
    bash build-simulator.sh
    bash build-flasher.sh
  workingDirectory: docker
  displayName: Build

- bash: |
    echo $(DOCKER_PASSWORD) | docker login -u $(DOCKER_USER) --password-stdin
  displayName: Docker login
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))

- bash: |
    bash push-local.sh ${SIM_REPO} newest-tag
    bash push-local.sh ${SIM_REPO} $(brewblox.tag)
    bash push-local.sh ${FLASH_REPO} newest-tag
    bash push-local.sh ${FLASH_REPO} $(brewblox.tag)
    bash push-rpi-local.sh ${FLASH_REPO} rpi-newest-tag
    bash push-rpi-local.sh ${FLASH_REPO} rpi-$(brewblox.tag)
  displayName: Deploy newest-tag and version tag to Docker Hub on tagged commits
  condition: and(succeeded(), variables['brewblox.tag'])
  workingDirectory: docker
  env:
    SIM_REPO: brewblox/firmware-simulator
    FLASH_REPO: brewblox/firmware-flasher

- bash: |
    CLEAN_BRANCH=$(echo $(brewblox.branch) | tr '/' '-' | tr '[:upper:]' '[:lower:]')
    bash push-local.sh ${SIM_REPO} ${CLEAN_BRANCH}
    bash push-local.sh ${FLASH_REPO} ${CLEAN_BRANCH}
    bash push-rpi-local.sh ${FLASH_REPO} rpi-${CLEAN_BRANCH}
  displayName: Deploy branch to Docker Hub on any push to the GitHub repository
  condition: and(succeeded(), variables['brewblox.branch'], not(variables['brewblox.tag']))
  workingDirectory: docker
  env:
    SIM_REPO: brewblox/firmware-simulator
    FLASH_REPO: brewblox/firmware-flasher
