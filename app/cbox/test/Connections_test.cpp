/*
 * Copyright 2018 BrewPi B.V.
 *
 * This file is part of BrewBlox.
 *
 * BrewBlox is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * BrewPi is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with BrewPi.  If not, see <http://www.gnu.org/licenses/>.
 */

#include "catch.hpp"
#include <cstdio>
#include "Connections.h"
#include "ConnectionsStringStream.h"
#include "DataStream.h"

// echo test function, copies input to output
void echo(cbox::DataIn& in, cbox::DataOut& out){
    in.push(out);
}

SCENARIO("Connections are generated by connection sources and managed by a connection pool"){
    GIVEN("A connection pool with a StringPairConnectionSource to generate new connections"){
        cbox::StringPairConnectionSource source;
        cbox::ConnectionPool pool = {source};      

        auto echoFunction = std::function<void(cbox::DataIn&, cbox::DataOut&)>(echo);

        WHEN("No new connections are available. Calling map has no effect"){
            pool.map(echoFunction);
        }
    }
}

